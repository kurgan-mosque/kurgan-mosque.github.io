{"version":3,"sources":["webpack:///./src/pages/fatwa/index.js","webpack:///./src/page/annotation/component.js","webpack:///./src/page/annotation/list.js","webpack:///./src/page/header.js","webpack:///./src/page/list.js"],"names":["PagesFatwa","data","list","allMarkdownRemark","nodes","map","title","frontmatter","slug","fields","excerpt","displayName","pageQuery","dateTimeFormat","Intl","DateTimeFormat","year","month","day","Time","styled","datetime","props","dateTime","toISOString","format","Annotation","date","to","slug2date","milliseconds","Date","parse","split","substring","isNaN","List","key","Header","h1","PageList"],"mappings":"2FAAA,6EAKMA,EAAa,SAAC,GAAc,IAAD,EAAXC,EAAW,EAAXA,KACdC,EAAOD,SAAH,UAAGA,EAAME,yBAAT,aAAG,EAAyBC,MAAMC,KAC1C,kBAA4D,CAC1DC,MADF,EAAGC,YAAeD,MAEhBE,KAFF,EAA2BC,OAAUD,KAGnCE,QAHF,EAA6CA,YAM/C,OAAO,wBAAC,IAAD,CAAUR,KAAMA,EAAMI,MAAM,WAGrCN,EAAWW,YAAc,aAEVX,YAER,IAAMY,EAAS,a,8GChBhBC,EAAiB,IAAIC,KAAKC,eAAe,QAAS,CACtDC,KAAM,UACNC,MAAO,OACPC,IAAK,YAGDC,EAAOC,aAAO,gBAAGC,EAAH,EAAGA,SAAaC,EAAhB,mCAClB,8CAAMC,SAAUF,EAASG,eAAmBF,GACzCT,EAAeY,OAAOJ,OAFjB,sEAAGD,CAAH,4EAWVD,EAAKR,YAAc,OAEnB,IAAMe,EAAaN,aAAO,gBAAGZ,EAAH,EAAGA,KAAMF,EAAT,EAASA,MAAOI,EAAhB,EAAgBA,QAASiB,EAAzB,EAAyBA,KAASL,EAAlC,wDACxB,kCAAaA,EACVK,GAAQ,wBAACR,EAAD,CAAME,SAAUM,IACzB,kCACE,wBAAC,OAAD,CAAMC,GAAIpB,GAAOF,IAEnB,iCAAII,OANQ,4EAAGU,CAAH,uIAkBZD,GAMJO,EAAWf,YAAc,aAEVe,QC5CTG,EAAY,SAACrB,GACjB,IAAMsB,EAAeC,KAAKC,MAAMxB,EAAKyB,MAAM,KAAK,GAAGC,UAAU,EAAG,KAChE,IAAKC,MAAML,GAAe,OAAO,IAAIC,KAAKD,IAG/BM,EAAOhB,aAAO,gBAAGlB,EAAH,EAAGA,KAASoB,EAAZ,+BACzB,6BAAQA,EACLpB,EAAKG,KAAI,gBAAGG,EAAH,EAAGA,KAASc,EAAZ,+BACR,8BAAIe,IAAK7B,GACP,wBAAC,EAAD,eAAYA,KAAMA,EAAMmB,KAAME,EAAUrB,IAAWc,YAJ1C,6DAAGF,CAAH,qGAoBjBgB,EAAKzB,YAAc,OAEJyB,QC9BFE,EAASlB,IAAOmB,GAAV,iEAAGnB,CAAH,mGAQnBkB,EAAO3B,YAAc,SAEN2B,QCJFE,EAAW,SAAC,GAAD,IAAGtC,EAAH,EAAGA,KAAMI,EAAT,EAASA,MAAT,OACtB,wBAAC,IAAD,KACE,wBAAC,IAAD,CAAKA,MAAOA,IACZ,wBAAC,EAAD,KAASA,GACT,wBAAC,EAAD,CAAgBJ,KAAMA,MAI1BsC,EAAS7B,YAAc,WAER6B","file":"component---src-pages-fatwa-index-js-095d1ba2a879be0b2dd7.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport PageList from 'page/list'\n\nconst PagesFatwa = ({ data }) => {\n  const list = data?.allMarkdownRemark?.nodes.map(\n    ({ frontmatter: { title }, fields: { slug }, excerpt }) => ({\n      title,\n      slug,\n      excerpt,\n    })\n  )\n  return <PageList list={list} title=\"Фетвы\" />\n}\n\nPagesFatwa.displayName = 'PagesFatwa'\n\nexport default PagesFatwa\n\nexport const pageQuery = graphql`\n  {\n    allMarkdownRemark(\n      filter: { fields: { slug: { regex: \"^/fatwa/\" } } }\n      sort: { fields: fields___slug, order: DESC }\n    ) {\n      nodes {\n        frontmatter {\n          title\n        }\n        fields {\n          slug\n        }\n        excerpt\n      }\n    }\n  }\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'gatsby'\n\nconst dateTimeFormat = new Intl.DateTimeFormat('ru-RU', {\n  year: 'numeric',\n  month: 'long',\n  day: 'numeric',\n})\n\nconst Time = styled(({ datetime, ...props }) => (\n  <time dateTime={datetime.toISOString()} {...props}>\n    {dateTimeFormat.format(datetime)}\n  </time>\n))`\n  font-size: 14px;\n  padding: 0.5em 1em;\n  color: white;\n  background-color: #33a67f;\n`\n\nTime.displayName = 'Time'\n\nconst Annotation = styled(({ slug, title, excerpt, date, ...props }) => (\n  <article {...props}>\n    {date && <Time datetime={date} />}\n    <h2>\n      <Link to={slug}>{title}</Link>\n    </h2>\n    <p>{excerpt}</p>\n  </article>\n))`\n  position: relative;\n  padding-top: 0.1em;\n\n  a {\n    text-decoration: none;\n    color: rgb(36, 116, 97);\n    font-size: 21px;\n  }\n\n  ${Time} {\n    top: -1.5em;\n    position: absolute;\n  }\n`\n\nAnnotation.displayName = 'Annotation'\n\nexport default Annotation\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Annotation from './component'\n\nconst slug2date = (slug) => {\n  const milliseconds = Date.parse(slug.split('/')[2].substring(0, 10))\n  if (!isNaN(milliseconds)) return new Date(milliseconds)\n}\n\nexport const List = styled(({ list, ...props }) => (\n  <ul {...props}>\n    {list.map(({ slug, ...props }) => (\n      <li key={slug}>\n        <Annotation slug={slug} date={slug2date(slug)} {...props} />\n      </li>\n    ))}\n  </ul>\n))`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n\n  li {\n    background-color: #e7f2ef;\n    padding: 0.1em 1em;\n    margin: 2em 0;\n  }\n`\n\nList.displayName = 'List'\n\nexport default List\n","import styled from 'styled-components'\n\nexport const Header = styled.h1`\n  color: rgb(53, 53, 53);\n  text-transform: uppercase;\n  font-size: 21px;\n  margin: 2em 0 1em;\n  padding: 0 0.7em;\n`\n\nHeader.displayName = 'Header'\n\nexport default Header\n","import React from 'react'\n\nimport Layout from 'layout'\nimport SEO from 'page/seo'\n\nimport AnnotationList from './annotation/list'\nimport Header from './header'\n\nexport const PageList = ({ list, title }) => (\n  <Layout>\n    <SEO title={title} />\n    <Header>{title}</Header>\n    <AnnotationList list={list} />\n  </Layout>\n)\n\nPageList.displayName = 'PageList'\n\nexport default PageList\n"],"sourceRoot":""}